plugins {
    id 'com.android.application'
    id 'kotlin-android'
}
def androidId = rootProject.ext.androidId
def support = rootProject.ext.dependencies
def test = rootProject.ext.testImpl
def appId = rootProject.ext.appId
def androidTest = rootProject.ext.androidTestImpl

android {
    compileSdkVersion androidId.compileSdkVersion
    buildToolsVersion androidId.buildToolsVersion

    defaultConfig {
        applicationId appId.app
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField("boolean", "isApp", String.valueOf(isApp))
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    support.each { k, v -> implementation v }
    if (project.hasProperty("isRelease") && project.property("isRelease") == "true") {
        COMMON_VERSION = COMMON_VERSION.replace("-SNAPSHOT", "")
        HOME_VERSION = HOME_VERSION.replace("-SNAPSHOT", "")
        ORDER_VERSION = ORDER_VERSION.replace("-SNAPSHOT", "")
        PERSONAL_VERSION = PERSONAL_VERSION.replace("-SNAPSHOT", "")
    }
    // 如需依赖maven的aar包，放开该注释依赖
//    implementation "com.openking.components:common:$BASE_VERSION"
    implementation project(':common')
    if (isApp){
        // 如需依赖maven的aar包，放开该注释依赖
//    implementation "com.openking.components:home:HOME_VERSION"
//    implementation "com.openking.components:order:ORDER_VERSION"
//    implementation "com.openking.components:personal:PERSONAL_VERSION"
        implementation project(':home')
        implementation project(':order')
        implementation project(':personal')
    }
    androidTest.each { k, v -> androidTestImplementation v }
    test.each { k, v -> testImplementation v }
}